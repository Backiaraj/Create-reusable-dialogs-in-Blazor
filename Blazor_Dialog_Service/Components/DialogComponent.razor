@using Syncfusion.Blazor.Popups;

@if (RenderDialog)
{
  <SfDialog @ref="dialogObj" IsModal="@Options.IsModal" Width="200px" ShowCloseIcon="@Options.ShowCloseIcon" @bind-Visible="@Visibility">
        <DialogTemplates>
            <Content> @Options.Content </Content>
            <FooterTemplate><button class="e-btn" @onclick="alertDialog"> OK </button></FooterTemplate>
        </DialogTemplates>
        <DialogPositionData X="@Xvalue" Y="@Yvalue"></DialogPositionData>
   </SfDialog>
}

@code {
    [Inject]
    public DialogService DialogService { get; set; }
    SfDialog dialogObj;
    private bool RenderDialog { get; set; } = false;
    private bool Visibility { get; set; } = false;
    private string Xvalue = "center";
    private string Yvalue = "top";

    // Parameter
    private DialogOptions Options = new DialogOptions();

    protected override void OnInitialized()
    {
        // Update the parameter in local variable and render the dialog
        DialogService.DialogInstance += (DialogOptions options) =>
        {
            InvokeAsync(() =>
            {
                this.Options.Header = options.Header;
                this.Options.Content = options.Content;
                this.Options.IsModal = options.IsModal;
                this.Options.ShowCloseIcon = options.ShowCloseIcon;
                this.Options.FooterTemplate = options.FooterTemplate;
                this.RenderDialog = true;
                this.Visibility = true;
                this.StateHasChanged();
            });
        };
    }
    public async Task alertDialog()
    {
        await this.dialogObj.HideAsync();
    }
}